load("@io_bazel_rules_go//go:def.bzl", "go_binary")

go_binary(
    name = "gopackagesdriver-nonshim",
    srcs = [
        "bazel.go",
        "main.go"
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//go/tools/gopackagesdriver-nonshim/stdlibmaps:go_default_library",
        "//go/tools/gopackagesdriver-nonshim/proto/build_event_stream:go_default_library",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@org_golang_x_tools//go/packages:go_default_library",
    ],
)

load(":querytool.bzl", "go_env_cmd")

go_env_cmd(
    name = "querytool",
    cmd = "$(location :gopackagesdriver-nonshim) $@",
    out = "querytool.sh",
    tools = [":gopackagesdriver-nonshim"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "all_files",
    testonly = True,
    srcs = glob(["**"]) +
    [
        "//go/tools/gopackagesdriver-nonshim/stdlibmaps:all_files",

        # FIXME ditch these by not checking in the generated protobuf code?
        "//go/tools/gopackagesdriver-nonshim/proto/build_event_stream:all_files",
        "//go/tools/gopackagesdriver-nonshim/proto/command_line:all_files",
        "//go/tools/gopackagesdriver-nonshim/proto/invocation_policy:all_files",
        "//go/tools/gopackagesdriver-nonshim/proto/option_filters:all_files",
    ],
    visibility = ["//visibility:public"],
)
